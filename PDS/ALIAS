//BC0THORT JOB (1152002-9800039,,TMVS01-UR-XXXX),'DTHORNTON',CLASS=V,
//   MSGCLASS=Y,NOTIFY=BC0THOR,REGION=4M
//JESOUT OUTPUT GROUPID=02A,DEFAULT=YES,JESDS=ALL,
//   PAGEDEF=GRYBIG,FORMDEF=GRYBIG
//*******************************************************************
//*                 BC0THOR.PDS.JCL(ALIAS)                          *
//* SAMPLE OF USE OF THE ALIAS PROGRAM:                             *
//* 1) DELETE ANY PRE-EXISTING VERSIONS OF THE TEST DATASET         *
//* 2) CREATE A DATASET ON A NON-SMS MANAGED VOLUME                 *
//* 3) CREATE AN ALIAS FOR THE DATASET CREATED IN STEP 1.           *
//* 4) PRINT OUT THE CONTENT OF THE DATASET USING THE ALIAS CREATED *
//*    IN STEP 2 TO PROVE IT ACCESSES THE ORIGINAL DATASET.         *
//* 5) REMOVE THE ALIAS DATASET FROM THE VOLUME                     *
//*******************************************************************
//*****************************************************************
//* STEP1: DELETE ANY PRE-EXISTING VERSIONS OF THE TEST DATASETS  *
//*****************************************************************
//STEP1    EXEC PGM=IDCAMS
//SYSPRINT DD SYSOUT=*
//SYSIN    DD *
 DELETE SPP.TEST.ALIAS
 DELETE SPP.BACKDOOR
//*****************************************************************
//* STEP2: CREATE DATASET SPP.TEST.ALIAS WHICH WILL GO TO A NON-  *
//*        SMS MANAGED VOLUME. WRITE SEVERAL IDENTIFIABLE RECORDS *
//*        INTO THE DATASET.                                      *
//*****************************************************************
//STEP2    EXEC PGM=IEBGENER
//SYSPRINT DD   SYSOUT=*
//SYSIN    DD   DUMMY
//SYSUT2   DD   DSN=SPP.TEST.ALIAS,DISP=(,CATLG),
//         UNIT=DISK,SPACE=(TRK,(10,1),RLSE),
//         DSORG=PS,RECFM=FB,LRECL=80
//SYSUT1   DD   *
RECORD 1: ON COMPLETION
RECORD 2:   THESE RECORDS
RECORD 3:     SHOULD BE
RECORD 4:       PRINTED BY
RECORD 5:         IEBGENER IN
RECORD 6:           STEP 3
//*****************************************************************
//* STEP3: CREATE AN ALIAS FOR THE DATASET CREATED IN STEP1. CALL *
//*        THE ALIAS SPP.BACKDOOR. ONCE CREATED, THIS DATASET     *
//*        WILL BE ALLOCATED ON THE SAME VOLUME WITH THE ORIGINAL *
//*        DATASET, AND WILL POINT TO ITS EXTENTS SO THAT ANY     *
//*        ACTIVITY AGAINST THE ALIAS DATASET WILL AFFECT THE     *
//*        ORIGINAL DATASET. BE SURE NOT TO CREATE ANY NEW        *
//*        EXTENTS, HOWEVER.                                      *
//*****************************************************************
//STEP3    EXEC PGM=ALIAS
//STEPLIB  DD   DSN=BC0THOR.LOAD.LOAD,DISP=SHR
//SYSUDUMP DD   SYSOUT=*
//SYSPRINT DD   SYSOUT=*
//SYSIN    DD   *
SPP.TEST.ALIAS
SPP.BACKDOOR
//*****************************************************************
//* STEP4: PRINT THE CONTENTS OF THE ORIGINAL DATASET BY USING THE*
//*        ALIAS DATASET TO ACCESS IT.                            *
//*****************************************************************
//STEP4    EXEC PGM=IEBGENER
//SYSPRINT DD   SYSOUT=*
//SYSIN    DD   DUMMY
//SYSUT1   DD   DSN=SPP.BACKDOOR,DISP=SHR
//SYSUT2   DD   SYSOUT=*
//*****************************************************************
//* STEP5: REMOVE THE ALIAS DATASET. IF LEFT ON THE VOLUME, SOME  *
//*        SYSTEM UTILITIES WILL RECOGNIZE AN ERROR WHEN THEY FIND*
//*        TWO DATASETS OCCUPYING THE SAME EXTENTS.               *
//*****************************************************************
//STEP5    EXEC PGM=ALIAS
//STEPLIB  DD   DSN=BC0THOR.LOAD.LOAD,DISP=SHR
//SYSUDUMP DD   SYSOUT=*
//SYSPRINT DD   SYSOUT=*
//SYSIN    DD   *
0
SPP.BACKDOOR
