//BC0THORE JOB (1152002-9800039,,TMVS01-UR-XXXX),'DTHORNTON',CLASS=V,
//   MSGCLASS=Y,NOTIFY=BC0THOR,REGION=4M
//JESOUT OUTPUT GROUPID=02A,DEFAULT=YES,JESDS=ALL,
//   PAGEDEF=GRYBIG,FORMDEF=GRYBIG
//*********************************************************************
//*                 BC0THOR.PDS.JCL(SCANTXT3)                         *
//*********************************************************************
//* PURPOSE IS TO FIND REFERENCES TO PDS MEMBERS WITHIN THE MEMBERS OF*
//* A PDS HAVING RECFM=FB,LRECL=80. FOR EXAMPLE, THIS WOULD HELP TO   *
//* LOCATE ALL THE PROCS IN A PROCLIB THAT EXECUTE A GIVEN SET OF     *
//* PROGRAMS, OR PERHAPS TO FIND ALL THE PROGRAMS IN A SOURCE COBOL   *
//* LIBRARY THAT REFER TO SOME SPECIFIED COPYBOOKS.                   *
//*                                                                   *
//* READS THE STRINGS FILE TO BUILD A TABLE OF STRINGS TO BE FOUND.   *
//*                                                                   *
//* BECAUSE THIS PROGRAM IS INTENDED TO LOCATE REFERENCES TO PDS MEMBE*
//* NAMES, THE STRING SEARCH IS CONDUCTED ONLY OVER INPUT RECORDS     *
//* COLUMNS 1-72. ALSO, THE STRINGS FOUND ARE TESTED TO SEE THAT THEY *
//* ARE "WORDS": THEY ARE PRECEDED BY BLANK, LEFT PARENTHESIS, QUOTE, *
//* APOSTROPHE AND FOLLOWED BY BLANK, RIGHT PARENTHESIS, QUOTE, PERIOD*
//* APOSTROPHE, SEMICOLON, OR COMMA.                                  *
//*                                                                   *
//* OPENS EACH FILE WHOSE DDNAME BEGINS WITH "INPUT". IF INPUT FILE IS*
//* A PDS, EACH MEMBER IS READ. FOR EACH RECORD READ, ALL LOWER-CASE  *
//* CHARACTERS ARE CONVERTED TO UPPER CASE, THEN RECORD IS SEARCHED   *
//* TO SEE IF IT CONTAINS ANY OF THE SPECIFIED STRINGS. IF IT DOES, AN*
//* OUTPUT RECORD IS FORMATTED AND WRITTEN.                           *
//*                                                                   *
//* THE STRINGS FILE MUST BE RECFM=FB,LRECL=80. IT CONTAINS STRINGS   *
//* TO BE LOCATED IN THE INPUT FILES. UP TO 500 STRINGS MAY BE ENTERED*
//* ONE PER RECORD. THE STRING IS ASSUMED TO BEGIN IN COLUMN 1 AND END*
//* AT THE FIRST BLANK COLUMN OR COLUMN 8, WHICHEVER OCCURS FIRST. AS *
//* THIS SCAN IS FOR PDS MEMBER NAMES, THE STRINGS ARE ASSUMED TO BE 1*
//* TO 8 CHARACTERS IN LENGTH.                                        *
//*                                                                   *
//* THE OUTPUT FILE MUST HAVE RECFM=FB. LRECL IS FROM THE JCL. RECORD *
//* CONTAINS:                                                         *
//*   COL 1-8 = THE STRING FOUND                                      *
//*   COL 9-18 = " FOUND IN "         <== IDENTIFYING LITERAL         *
//*   COL 19-72 = DSNAME(MEMBERNAME)                                  *
//*   COL 73-80 = BLANKS                                              *
//*                                                                   *
//*********************************************************************
//SCRATCH  EXEC PGM=IDCAMS
//SYSPRINT DD SYSOUT=*
//SYSIN    DD *
 DELETE BC0THOR.DEL.PDSDIR
 DELETE BC0THOR.DEL.SCANTXT3
 DELETE BC0THOR.TST.SCANTXT3
//*
//PDSDIR   EXEC PGM=PDSDIR
//STEPLIB  DD DSN=BC0THOR.LOAD.LOAD,DISP=SHR
//SYSUDUMP DD SYSOUT=*
//INPUT1   DD DISP=SHR,DSN=BC0THOR.PDS.ASM
//OUTPUT1  DD DSN=BC0THOR.DEL.PDSDIR,DISP=(,CATLG),
//         UNIT=DISK,SPACE=(TRK,(15,5)),
//         RECFM=FB,LRECL=80
//*
//SCANTXT3 EXEC PGM=SCANTXT3
//STEPLIB  DD DSN=BC0THOR.LOAD.LOAD,DISP=SHR
//SYSUDUMP DD SYSOUT=*
//INPUT1   DD DISP=SHR,DSN=BC0THOR.PDS.ASM
//INPUT2   DD DISP=SHR,DSN=BC0THOR.PDS.COBOL
//INPUT3   DD DISP=SHR,DSN=BC0THOR.PDS.C
//INPUT4   DD DISP=SHR,DSN=BC0THOR.PDS.JCL
//INPUT5   DD DISP=SHR,DSN=BC0THOR.PDS.DATA
//INPUT6   DD DISP=SHR,DSN=BC0THOR.PDS.INSTRUCT
//INPUT7   DD DISP=SHR,DSN=BC0THOR.PDS.CLISTFB
//INPUT8   DD DISP=SHR,DSN=BC0THOR.PDS.MEMORY
//STRINGS  DD DSN=BC0THOR.DEL.PDSDIR,DISP=SHR
//OUTPUT   DD DSN=BC0THOR.DEL.SCANTXT3,DISP=(,CATLG),
//         UNIT=DISK,SPACE=(TRK,(30,5),RLSE),
//         RECFM=FB,LRECL=80
//*
//SORT     EXEC PGM=SORT33,PARM='CORE=MAX,MSG=AP'
//SYSUDUMP DD SYSOUT=(*,,DUMP)
//SORTIN   DD DSN=BC0THOR.DEL.SCANTXT3,DISP=SHR
//SORTOUT  DD DSN=BC0THOR.TST.SCANTXT3,DISP=(,CATLG),
//         UNIT=DISK,SPACE=(TRK,(60,9),RLSE)
//SORTWK01 DD UNIT=DISK,SPACE=(CYL,(5,5))
//SORTWK02 DD UNIT=DISK,SPACE=(CYL,(5,5))
//SORTWK03 DD UNIT=DISK,SPACE=(CYL,(5,5))
//SORTWK04 DD UNIT=DISK,SPACE=(CYL,(5,5))
//SORTWK05 DD UNIT=DISK,SPACE=(CYL,(5,5))
//SORTWK06 DD UNIT=DISK,SPACE=(CYL,(5,5))
//SYSOUT   DD SYSOUT=*
//SYSIN    DD *
 SORT FIELDS=(1,8,CH,A,31,17,CH,A)
 SUM FIELDS=NONE
